{"version":3,"file":"node_modules_vidstack_dev_providers_vidstack-audio_js.js?ver=94a3248de054ec24743e","mappings":";;;;;;;;;;;;;;;;AAAwD;AACD;AACa;AAC5B;AACA;AACA;AACA;;AAExC,4BAA4B,gEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oEAAM;AACV,yBAAyB,4EAAkB;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEyB","sources":["webpack://fb-blocks/./node_modules/vidstack/dev/providers/vidstack-audio.js"],"sourcesContent":["import { scoped } from '../chunks/vidstack-Bu2kfzUd.js';\nimport { HTMLMediaProvider } from './vidstack-html.js';\nimport { HTMLAirPlayAdapter } from '../chunks/vidstack-Bo5OTJ06.js';\nimport '../chunks/vidstack-CjhKISI0.js';\nimport '../chunks/vidstack-qh1N5_f_.js';\nimport '../chunks/vidstack-Dihypf8P.js';\nimport '../chunks/vidstack-Dv_LIPFu.js';\n\nclass AudioProvider extends HTMLMediaProvider {\n  $$PROVIDER_TYPE = \"AUDIO\";\n  get type() {\n    return \"audio\";\n  }\n  airPlay;\n  constructor(audio, ctx) {\n    super(audio, ctx);\n    scoped(() => {\n      this.airPlay = new HTMLAirPlayAdapter(this.media, ctx);\n    }, this.scope);\n  }\n  setup() {\n    super.setup();\n    if (this.type === \"audio\") this.ctx.notify(\"provider-setup\", this);\n  }\n  /**\n   * The native HTML `<audio>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement}\n   */\n  get audio() {\n    return this.media;\n  }\n}\n\nexport { AudioProvider };\n"],"names":[],"sourceRoot":""}