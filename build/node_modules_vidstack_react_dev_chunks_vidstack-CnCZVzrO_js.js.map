{"version":3,"file":"node_modules_vidstack_react_dev_chunks_vidstack-CnCZVzrO_js.js?ver=8b9f55d2b59e25438043","mappings":";;;;;;;;;;;;;;;;AAAA;;AAEA,CAAgD;AAC+B;AAChE;AACW;;AAE1B,4BAA4B,oEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAM;AACV,yBAAyB,qEAAkB;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEyB","sources":["webpack://fb-blocks/./node_modules/@vidstack/react/dev/chunks/vidstack-CnCZVzrO.js"],"sourcesContent":["\"use client\"\n\nimport { scoped } from './vidstack-D_bWd66h.js';\nimport { HTMLMediaProvider, HTMLAirPlayAdapter } from './vidstack-DUlCophs.js';\nimport 'react';\nimport '@floating-ui/dom';\n\nclass AudioProvider extends HTMLMediaProvider {\n  $$PROVIDER_TYPE = \"AUDIO\";\n  get type() {\n    return \"audio\";\n  }\n  airPlay;\n  constructor(audio, ctx) {\n    super(audio, ctx);\n    scoped(() => {\n      this.airPlay = new HTMLAirPlayAdapter(this.media, ctx);\n    }, this.scope);\n  }\n  setup() {\n    super.setup();\n    if (this.type === \"audio\") this.ctx.notify(\"provider-setup\", this);\n  }\n  /**\n   * The native HTML `<audio>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement}\n   */\n  get audio() {\n    return this.media;\n  }\n}\n\nexport { AudioProvider };\n"],"names":[],"sourceRoot":""}