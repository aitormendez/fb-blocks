{"version":3,"file":"node_modules_vidstack_dev_chunks_vidstack-krOAtKMi_js.js?ver=0549e411a823f54323e4","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,0FAA0F,QAAQ;AAClG;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA,GAAG;AACH,8KAA8K,YAAY;AAC1L;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEkD","sources":["webpack://fb-blocks/./node_modules/vidstack/dev/chunks/vidstack-krOAtKMi.js"],"sourcesContent":["const videoIdRE = /(?:https:\\/\\/)?(?:player\\.)?vimeo(?:\\.com)?\\/(?:video\\/)?(\\d+)(?:(?:\\?hash=|\\?h=|\\/)(.*))?/;\nconst infoCache = /* @__PURE__ */ new Map();\nconst pendingFetch = /* @__PURE__ */ new Map();\nfunction resolveVimeoVideoId(src) {\n  const matches = src.match(videoIdRE);\n  return { videoId: matches?.[1], hash: matches?.[2] };\n}\nasync function getVimeoVideoInfo(videoId, abort, videoHash) {\n  if (infoCache.has(videoId)) return infoCache.get(videoId);\n  if (pendingFetch.has(videoId)) return pendingFetch.get(videoId);\n  let oembedSrc = `https://vimeo.com/api/oembed.json?url=https://player.vimeo.com/video/${videoId}`;\n  if (videoHash) {\n    oembedSrc = oembedSrc.concat(`?h=${videoHash}`);\n  }\n  const promise = window.fetch(oembedSrc, {\n    mode: \"cors\",\n    signal: abort.signal\n  }).then((response) => response.json()).then((data) => {\n    const thumnailRegex = /vimeocdn.com\\/video\\/(.*)?_/, thumbnailId = data?.thumbnail_url?.match(thumnailRegex)?.[1], poster = thumbnailId ? `https://i.vimeocdn.com/video/${thumbnailId}_1920x1080.webp` : \"\", info = {\n      title: data?.title ?? \"\",\n      duration: data?.duration ?? 0,\n      poster,\n      pro: data.account_type !== \"basic\"\n    };\n    infoCache.set(videoId, info);\n    return info;\n  }).finally(() => pendingFetch.delete(videoId));\n  pendingFetch.set(videoId, promise);\n  return promise;\n}\n\nexport { getVimeoVideoInfo, resolveVimeoVideoId };\n"],"names":[],"sourceRoot":""}